#!/usr/bin/env bash
set -euo pipefail

# Logging function
log() {
  echo "[SSH Key Buildpack] $*" >&2
}

# Captura argumentos CNB
LAYERS_DIR=${1:-}
PLATFORM_DIR=${2:-}
PLAN_PATH=${3:-}

# Debug: log dos argumentos recebidos
log "Debug: LAYERS_DIR=$LAYERS_DIR"
log "Debug: PLATFORM_DIR=$PLATFORM_DIR" 
log "Debug: PLAN_PATH=$PLAN_PATH"

# Valida se o diretório de layers foi fornecido
if [ -z "$LAYERS_DIR" ]; then
  log "ERRO: Diretório de layers não fornecido"
  exit 1
fi

SSH_LAYER_DIR="$LAYERS_DIR/com.smartfit.ssh-key"

log "Criando diretório SSH: $SSH_LAYER_DIR/.ssh"
mkdir -p "$SSH_LAYER_DIR/.ssh"
chmod 700 "$SSH_LAYER_DIR/.ssh"

# Garante que a chave foi passada como env var (double check)
if [ -z "${BUILDPACK_SSH_KEY:-}" ]; then
  log "ERRO: variável BUILDPACK_SSH_KEY não definida"
  exit 1
fi

# Valida se a chave SSH parece válida
if ! echo "$BUILDPACK_SSH_KEY" | grep -q "BEGIN.*PRIVATE KEY"; then
  log "AVISO: BUILDPACK_SSH_KEY não parece ser uma chave SSH válida"
fi

# Grava a chave privada e ajusta permissão
log "Configurando chave SSH privada"
echo "$BUILDPACK_SSH_KEY" > "$SSH_LAYER_DIR/.ssh/id_rsa"
chmod 600 "$SSH_LAYER_DIR/.ssh/id_rsa"

# Configura hosts conhecidos
SSH_KNOWN_HOSTS="${BUILDPACK_SSH_KNOWN_HOSTS:-github.com}"
log "Configurando hosts conhecidos: $SSH_KNOWN_HOSTS"

# Popula known_hosts
> "$SSH_LAYER_DIR/.ssh/known_hosts"
for host in $SSH_KNOWN_HOSTS; do
  log "Adicionando host conhecido: $host"
  ssh-keyscan "$host" >> "$SSH_LAYER_DIR/.ssh/known_hosts" 2>/dev/null || true
done

chmod 644 "$SSH_LAYER_DIR/.ssh/known_hosts"

# Configura o comando SSH padrão
SSH_COMMAND="ssh -i $SSH_LAYER_DIR/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=$SSH_LAYER_DIR/.ssh/known_hosts"

# Gera o arquivo de env da layer
log "Configurando variáveis de ambiente"
cat <<EOF > "$LAYERS_DIR/com.smartfit.ssh-key.env"
GIT_SSH_COMMAND=$SSH_COMMAND
EOF

# Gera o metadata TOML da layer
cat <<EOF > "$LAYERS_DIR/com.smartfit.ssh-key.toml"
[types]
build = true
launch = false
cache = false

[metadata]
version = "0.1.15"
configured_hosts = "$SSH_KNOWN_HOSTS"
EOF

log "Configuração de chave SSH concluída com sucesso"
